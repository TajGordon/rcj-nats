{
  "_comment": "Default values apply to all robots unless overridden in robot-specific sections",
  
  "defaults": {
    "camera": {
      "width": 640,
      "height": 640,
      "format": "RGB888",
      "fps_target": 30
    },
    "mirror": {
      "_comment": "Circular mirror detection settings for omnidirectional camera",
      "enable": true,
      "detection_method": "hough",
      "_comment_detection_method": "Detection method: 'hough' (Hough Circle Transform) or 'contour' (contour-based)",
      "min_radius": 150,
      "max_radius": 400,
      "detection_interval": 900,
      "_comment_detection_interval": "Detect mirror circle every N frames (900 frames = ~30 seconds at 30fps)",
      "fallback_radius": 250,
      "_comment_fallback_radius": "Fallback radius if mirror not detected",
      "robot_forward_rotation": 0,
      "_comment_robot_forward_rotation": "Rotation offset in degrees to align camera with robot (0, 90, 180, or 270)",
      "canny_threshold1": 50,
      "canny_threshold2": 150,
      "hough_param1": 100,
      "_comment_hough_param1": "Canny edge detector high threshold for Hough transform",
      "hough_param2": 30,
      "_comment_hough_param2": "Accumulator threshold for Hough circle centers (lower = more circles detected)"
    },
    "detection": {
      "proximity_threshold": 5000,
      "angle_tolerance": 15,
      "goal_center_tolerance": 0.15,
      "close_ball_zone": {
        "_comment": "Extra sensitive zone for detecting ball when it's in/near dribbler",
        "enable": true,
        "center_x_offset": 0,
        "_comment_center_x_offset": "Horizontal offset from mirror center (pixels, positive=right)",
        "center_y_offset": 20,
        "_comment_center_y_offset": "Vertical offset from mirror center (pixels, negative=up/forward)",
        "width": 40,
        "_comment_width": "Width of detection zone (pixels)",
        "height": 15,
        "_comment_height": "Height of detection zone (pixels)",
        "min_ball_radius": 1,
        "_comment_min_ball_radius": "Minimum ball radius in pixels (very sensitive, even 1px)",
        "max_ball_area": 10000,
        "_comment_max_ball_area": "Maximum ball area to avoid false positives"
      }
    },
    "motors": {
      "max_speed": 255,
      "acceleration": 50,
      "deadzone": 20
    },
    "movement": {
      "default_speed": 0.05,
      "max_speed": 0.06,
      "rotation_speed": 0.03,
      "approach_slow_distance": 50
    },
    "motor_addresses": "_AUTO_DETECT_",
    "_comment_motor_addresses": "Motor addresses are auto-detected based on hostname. m7 (necron) uses [27,29,25,26]. f7 (storm) uses [28,30,26,27] via mapping: 25→26, 26→27, 27→28, 29→30. Set explicitly here or in robot-specific section to override auto-detection.",
    "motor_multipliers": [1.0, -1.0, -1.0, 1.0],
    "_comment_motor_multipliers": "Default motor direction multipliers (1.0 = normal, -1.0 = reversed). Order: [back_left, front_left, front_right, back_right]",
    "max_speed": 400000000,
    "_comment_max_speed": "Maximum motor speed in encoder units",
    "current_limit_foc": 196608,
    "_comment_current_limit_foc": "FOC current limit (65536 * 3)",
    "id_pid": {
      "kp": 1500,
      "ki": 200
    },
    "iq_pid": {
      "kp": 1500,
      "ki": 200
    },
    "speed_pid": {
      "kp": 0.04,
      "ki": 0.0004,
      "kd": 0.03
    },
    "position_pid": {
      "kp": 275,
      "ki": 0,
      "kd": 0
    },
    "position_region_boundary": 250000,
    "operating_mode": 3,
    "_comment_operating_mode": "3 = FOC mode",
    "sensor_mode": 1,
    "_comment_sensor_mode": "1 = Sin/cos encoder",
    "command_mode": 12,
    "_comment_command_mode": "12 = Speed mode",
    "watchdog_enabled": true,
    "watchdog_timeout": 0.5,
    "_comment_watchdog": "Auto-stop motors if no commands for 0.5 seconds",
    
    "dribbler": {
      "_comment": "Dribbler motor control (address auto-detected by hostname)",
      "default_speed": 0.5,
      "max_speed": 1.0
    },
    
    "kicker": {
      "_comment": "Kicker solenoid control",
      "kick_duration": 0.15,
      "_comment_duration": "Duration of kick pulse in seconds",
      "gpio_pin": "D16",
      "_comment_gpio": "GPIO pin for kicker relay (board.D16)"
    }
  },
  
  "storm": {
    "_comment": "Storm-specific configuration (f7.local, port 8080)",
    
    "motor_addresses": "_AUTO_DETECT_",
    "_comment_motor_addresses": "Auto-detected as [28,30,26,27] for f7 (storm). Mapped from m7 base addresses via: 25→26, 26→27, 27→28, 29→30",
    
    "dribbler": {
      "address": 29,
      "_comment": "Dribbler motor I2C address for f7 (storm)"
    },
    
    "hsv_ranges": {
      "ball": {
        "lower": [0, 180, 170],
        "upper": [50, 255, 255],
        "min_area": 0,
        "max_area": 50000
      },
      "blue_goal": {
        "lower": [100, 150, 50],
        "upper": [120, 255, 255],
        "min_area": 500,
        "max_area": 1000
      },
      "yellow_goal": {
        "lower": [20, 100, 100],
        "upper": [40, 255, 255],
        "min_area": 500,
        "max_area": 1000
      }
    },
    
    "motors": {
      "i2c_address": "0x50"
    }
  },
  
  "necron": {
    "_comment": "Necron-specific configuration (m7.local, port 8081)",
    
    "dribbler": {
      "address": 30,
      "_comment": "Dribbler motor I2C address for m7 (necron)"
    },
    
    "hsv_ranges": {
      "ball": {
        "lower": [0, 180, 170],
        "upper": [50, 255, 255],
        "min_area": 0,
        "max_area": 50000
      },
      "blue_goal": {
        "lower": [100, 150, 50],
        "upper": [120, 255, 255],
        "min_area": 500,
        "max_area": 100000
      },
      "yellow_goal": {
        "lower": [20, 100, 100],
        "upper": [40, 255, 255],
        "min_area": 500,
        "max_area": 100000
      }
    },
    
    "motor_addresses": [27, 29, 25, 26],
    "_comment_addresses": "Order: [back_left, front_left, front_right, back_right]",
    "_comment_addresses_detail": "27=back_left, 29=front_left, 25=front_right, 26=back_right",
    "motor_multipliers": [1.0, -1.0, -1.0, 1.0],
    "_comment_multipliers": "All motors spin CCW, but right motors need reversal (wheels are flipped)",
    "_comment_multipliers_detail": "[back_left=1, front_left=1, front_right=-1, back_right=-1]"
  }
}
