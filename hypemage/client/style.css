/* Multi-Robot Dashboard Styles */

:root {
    --bg-dark: #0a0e27;
    --bg-panel: #151933;
    --accent-blue: #00d4ff;
    --accent-purple: #b74dff;
    --text-primary: #ffffff;
    --text-secondary: #a0aec0;
    --success: #00ff88;
    --danger: #ff4444;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: linear-gradient(135deg, var(--bg-dark) 0%, #1a1f3a 100%);
    color: var(--text-primary);
    min-height: 100vh;
    overflow-x: hidden;
}

#app {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.header {
    background: linear-gradient(135deg, #1a1f3a 0%, #2d3561 100%);
    padding: 1.5rem 2rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header h1 {
    background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 2rem;
    font-weight: 700;
}

.connection-badges {
    display: flex;
    gap: 1rem;
}

.badge {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
}

.badge.connected {
    background: rgba(0, 255, 136, 0.2);
    color: var(--success);
    border: 2px solid var(--success);
}

.badge.disconnected {
    background: rgba(255, 68, 68, 0.2);
    color: var(--danger);
    border: 2px solid var(--danger);
}

.main-content {
    flex: 1;
    padding: 2rem;
    overflow-y: auto;
    min-height: 0;
}

.both-view {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    min-height: 100%;
}

.robot-column {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.robot-title {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    text-align: center;
}

.single-view {
    max-width: 1400px;
    margin: 0 auto;
}

.widgets-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* Smooth layout transitions for all widgets (not during resize) */
.widgets-container > *:not(.widget-resizable) {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Both view: Each robot column has vertical widget stack */
.both-view .widgets-container {
    display: flex;
    flex-direction: column;
}

/* Single view: Widgets stack vertically with full width */
.single-view .widgets-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.single-view .widget {
    width: 100%;
    flex-shrink: 0;
}

/* Resizable widgets in single view */
.single-view .widget-resizable {
    min-height: 400px;
}

/* Resizable widgets in single view */
.single-view .widget-resizable {
    min-height: 400px;
}

/* Camera widget maintains aspect ratio */
.camera-widget {
    display: flex;
    flex-direction: column;
}

.camera-widget img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: contain;
    border-radius: 8px;
    margin-top: 1rem;
    background: rgba(0, 0, 0, 0.5);
}

/* Single camera widget centers and limits width */
.single-view .camera-widget:only-child,
.both-view .camera-widget:only-of-type {
    max-width: 600px;
    margin: 0 auto;
    width: 100%;
}

.widget {
    background: var(--bg-panel);
    border: 2px solid transparent;
    border-radius: 12px;
    padding: 1.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    position: relative;
    cursor: grab;
}

.widget:active {
    cursor: grabbing;
}

/* Hover state - subtle lift */
.widget:hover {
    border-color: var(--accent-blue);
    transform: translateY(-2px);
}

/* Grab active - finger pressed but not yet dragging */
.widget.grab-active {
    cursor: grabbing;
    transform: scale(0.98);
}

/* Dragging clone - follows cursor freely */
.widget-dragging-clone {
    position: fixed !important;
    z-index: 10000;
    cursor: grabbing;
    pointer-events: none;
    transform: scale(1.05) rotate(2deg);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5), 0 0 0 1px var(--accent-blue);
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0.95;
}

/* Dropping animation - clone fades out */
.widget-dropping {
    transform: scale(1) rotate(0deg) !important;
    opacity: 0 !important;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Original widget while being dragged - hidden */
.widget-dragging-original {
    display: none;
}

/* Widget dropped - pop-in animation */
.widget-dropped {
    animation: popIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes popIn {
    0% {
        transform: scale(0.9);
        opacity: 0;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Placeholder - ghost outline showing drop position */
.widget-placeholder {
    background: linear-gradient(135deg, 
        rgba(0, 255, 136, 0.1), 
        rgba(0, 136, 255, 0.1)
    );
    border: 2px dashed var(--accent-blue);
    border-radius: 12px;
    margin-bottom: 1.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

/* Animated shimmer effect on placeholder */
.widget-placeholder::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent, 
        rgba(0, 255, 136, 0.2), 
        transparent
    );
    animation: shimmer 2s infinite;
}

@keyframes shimmer {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* Resize handle */
.widget-resizable {
    resize: both;
    overflow: hidden;
    min-width: 300px;
    min-height: 300px;
    max-width: 100%;
    transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Logs widget resize - ensure content fills space */
.logs-widget.widget-resizable {
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.logs-widget.widget-resizable .logs-container {
    flex: 1;
    min-height: 0;
    overflow-y: auto;
}

/* Camera widget resize - remove aspect ratio constraint */
.widget-resizable.camera-widget img {
    aspect-ratio: unset;
    max-height: calc(100% - 4rem);
    width: 100%;
    object-fit: contain;
}

.widget-resizable.camera-widget .no-feed {
    aspect-ratio: unset;
    min-height: 200px;
    flex: 1;
}

.widget-resizable:hover::after {
    opacity: 0.8;
    transform: scale(1.2);
}

/* Resizing active state */
.widget-resizable:active::after {
    opacity: 1;
    transform: scale(1.3);
    color: var(--success);
}

.widget-resizable::after {
    content: 'â‹°';
    position: absolute;
    bottom: 0.5rem;
    right: 0.5rem;
    color: var(--accent-blue);
    opacity: 0.3;
    font-size: 1.5rem;
    pointer-events: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
}

/* Enhanced resize corner interaction */
.widget-resizable {
    position: relative;
}

.widget-resizable::before {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    width: 40px;
    height: 40px;
    cursor: nwse-resize;
    z-index: 100;
}

.widget h3 {
    color: var(--accent-blue);
    margin-bottom: 1rem;
    font-size: 1.25rem;
}

.button-group {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
}

.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.btn-primary {
    background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));
    color: white;
}

.btn-danger {
    background: var(--danger);
    color: white;
}

.status-info {
    margin-top: 1rem;
    padding: 1rem;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 8px;
}

.status-info p {
    margin: 0.5rem 0;
    color: var(--text-secondary);
}

.no-feed {
    padding: 3rem;
    text-align: center;
    color: var(--text-secondary);
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    margin-top: 1rem;
    aspect-ratio: 1 / 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

.motors-grid {
    display: grid;
    gap: 1rem;
}

.motor-item {
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 1rem;
    align-items: center;
}

.motor-label {
    font-weight: 600;
    color: var(--accent-blue);
    text-transform: capitalize;
    min-width: 100px;
}

.motor-bar {
    height: 24px;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 12px;
    overflow: hidden;
}

.motor-fill {
    height: 100%;
    transition: width 0.3s ease;
}

.motor-value {
    font-weight: 600;
    min-width: 50px;
    text-align: right;
}

/* Logs Widget */
.logs-widget .logs-container {
    background: rgba(0, 0, 0, 0.4);
    border-radius: 8px;
    padding: 1rem;
    max-height: 300px;
    overflow-y: auto;
    font-family: 'Courier New', monospace;
    font-size: 0.875rem;
}

.single-view .logs-widget .logs-container {
    max-height: 500px;
}

.logs-container::-webkit-scrollbar {
    width: 8px;
}

.logs-container::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 4px;
}

.logs-container::-webkit-scrollbar-thumb {
    background: var(--accent-blue);
    border-radius: 4px;
}

.logs-container::-webkit-scrollbar-thumb:hover {
    background: var(--accent-purple);
}

.no-logs {
    color: var(--text-secondary);
    text-align: center;
    padding: 2rem;
    font-style: italic;
}

.log-entries {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.log-entry {
    color: var(--text-secondary);
    line-height: 1.5;
    word-wrap: break-word;
}

.footer {
    background: var(--bg-panel);
    padding: 1rem 2rem;
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3);
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
}

.view-switcher {
    display: flex;
    gap: 0.5rem;
}

.view-btn {
    padding: 0.75rem 1.5rem;
    border: 2px solid var(--accent-blue);
    background: transparent;
    color: var(--accent-blue);
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
}

.view-btn.active {
    background: var(--accent-blue);
    color: var(--bg-dark);
}

.widget-toggles {
    display: flex;
    gap: 0.75rem;
    align-items: center;
    flex-wrap: wrap;
}

.toggle-label {
    color: var(--text-secondary);
    font-weight: 600;
    font-size: 0.875rem;
}

.toggle-btn {
    padding: 0.5rem 1rem;
    border: 2px solid var(--danger);
    background: rgba(255, 68, 68, 0.1);
    color: var(--danger);
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
}

.toggle-btn:hover {
    background: rgba(255, 68, 68, 0.2);
    transform: translateY(-1px);
}

.toggle-btn.active {
    border-color: var(--success);
    background: rgba(0, 255, 136, 0.15);
    color: var(--success);
}

.toggle-btn.active:hover {
    background: rgba(0, 255, 136, 0.25);
}

@media (max-width: 1200px) {
    .both-view {
        grid-template-columns: 1fr;
    }
}
